
@{
    ViewBag.Title = "Index";
}
<div class="table-responsive" style="height:600px;">
    <br />
    <div class="autocomplete" style="width:445px;">
        <label style="background-color:darkblue; font-size:20px; border-radius:5px;">
            <span class="glyphicon glyphicon-search" style="color:white; padding-left:10px; padding-right:5px;"></span>
            <input id="myInput" type="text" style="border-radius:4px; border:2px solid blue; padding:6px 12px; width:400px;" placeholder="Search" />
            @*<input id="myInput" type="text" name="myCountry" placeholder="Country">*@
        </label>
    </div>
    <table class="table">
        <tr>
            <td colspan="2" width="800px">
                <label>Nama Lengkap</label>
                <input type="text" class="form-control" readonly name="fullname" id="idFullName" style="border:2px solid blue;" />
            </td>
            <td></td>
            <td rowspan="3">
                <label style="border:1px solid blue; border-radius:5px;">
                    <label style="color:white;font-size:18px; padding:5px; background-color:blue; width:300px;">Role*</label>
                    <p style="padding-left:10px;"><input type="checkbox" />&nbsp;Role 1</p>
                    <p style="padding-left:10px;"><input type="checkbox" />&nbsp;Role 2</p>
                    <p style="padding-left:10px;"><input type="checkbox" />&nbsp;Role 3</p>
                    <p style="padding-left:10px;"><input type="checkbox" />&nbsp;Role 4</p>
                    <p style="padding-left:10px;"><input type="checkbox" />&nbsp;Role 5</p>
                </label>
            </td>
        </tr>
        <tr>
            <td colspan="2" width="800px">
                <label>Username*</label>
                <input type="text" class="form-control" name="username" id="idUserName" style="border:2px solid blue;" />
            </td>
            <td></td>
            <td></td>
        </tr>
        <tr>
            <td>
                <label>Sandi*</label>
                <input type="text" class="form-control" name="abpwd" id="idInpPw" style="border:2px solid blue;" />
            </td>
            <td>
                <label>Ulangi Sandi*</label>
                <input type="text" class="form-control" name="abpwd2" id="idInpPw2" style="border:2px solid blue;" />
            </td>
            <td></td>
        </tr>
        <tr>
            <td>
                <button id="idHps" style="background-color:red; border:2px solid red; border-radius:5px;">
                    <span class="glyphicon glyphicon-trash" style="font-size:20px; color:white; padding-top:5px; padding:5px; "></span>
                </button>
            </td>
            <td colspan="3" align="right">
                <button type="button" class="btn orenwoy" id="idBtnCancelPengguna">&nbsp;&nbsp;Batal&nbsp;&nbsp;</button>
                <button type="button" class="btn biruwoy" id="idBtnSubmitPengguna">Simpan</button>
            </td>
        </tr>
    </table>
</div>



<script>

    $(document).ready(function () {

        var array_total = [];

        $.ajax({
            url: '/Pengguna/Tampil',
            method: 'Get',
            success: function (mdl) {
                debugger;
                $.each(mdl, function (i, d) { //menjahit data ke dalam tabel
                    array_total[i] = d.fullname;
                    debugger;
                });
            }
        });

        autocomplete(document.getElementById("myInput"), array_total);
        });

function autocomplete(inp, arr) {
    /*the autocomplete function takes two arguments,
    the text field element and an array of possible autocompleted values:*/
    var currentFocus;
    /*execute a function when someone writes in the text field:*/
    inp.addEventListener("input", function (e) {
        var a, b, i, val = this.value;
        /*close any already open lists of autocompleted values*/
        closeAllLists();
        if (!val) { return false; }
        currentFocus = -1;
        /*create a DIV element that will contain the items (values):*/
        a = document.createElement("DIV");
        a.setAttribute("id", this.id + "autocomplete-list");
        a.setAttribute("class", "autocomplete-items");
        /*append the DIV element as a child of the autocomplete container:*/
        this.parentNode.appendChild(a);
        /*for each item in the array...*/
        for (i = 0; i < arr.length; i++) {
            /*check if the item starts with the same letters as the text field value:*/
            if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {
                /*create a DIV element for each matching element:*/
                b = document.createElement("DIV");
                /*make the matching letters bold:*/
                b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
                b.innerHTML += arr[i].substr(val.length);
                /*insert a input field that will hold the current array item's value:*/
                b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";
                /*execute a function when someone clicks on the item value (DIV element):*/
                b.addEventListener("click", function (e) {
                    /*insert the value for the autocomplete text field:*/
                    inp.value = this.getElementsByTagName("input")[0].value;
                    /*close the list of autocompleted values,
                    (or any other open lists of autocompleted values:*/
                    closeAllLists();
                });
                a.appendChild(b);
            }
        }
    });
    /*execute a function presses a key on the keyboard:*/
    inp.addEventListener("keydown", function (e) {
        var x = document.getElementById(this.id + "autocomplete-list");
        if (x) x = x.getElementsByTagName("div");
        if (e.keyCode == 40) {
            /*If the arrow DOWN key is pressed,
            increase the currentFocus variable:*/
            currentFocus++;
            /*and and make the current item more visible:*/
            addActive(x);
        } else if (e.keyCode == 38) { //up
            /*If the arrow UP key is pressed,
            decrease the currentFocus variable:*/
            currentFocus--;
            /*and and make the current item more visible:*/
            addActive(x);
        } else if (e.keyCode == 13) {
            debugger;
            $.ajax({
                url: '/Pengguna/AmbilData',
                data: { ID: $('#myInput').val() },
                method: 'Get',
                success: function (mdl) {
                    debugger;
                    $('#idFullName').val(mdl.fullname);
                    $('#idUserName').val(mdl.email);
                    document.getElementById("idHps").disabled = false;

                    //if ($('#idUserName').val != "") {
                    //    debugger;
                    //    $.ajax({
                    //        url: '/Addr/AmbilData',
                    //        data: { ID: $('#idUserName').val() },
                    //        method: 'Get',
                    //        success: function (mdl) {
                    //            debugger;
                    //            document.getElementById("idHps").disabled = false;
                    //        },
                    //        error: function (mdl) {
                    //            document.getElementById("idHps").disabled = true;
                    //        }
                    //    });
                    //}
                }
            });
            debugger;
            /*If the ENTER key is pressed, prevent the form from being submitted,*/
            e.preventDefault();
            if (currentFocus > -1) {
                /*and simulate a click on the "active" item:*/
                if (x) x[currentFocus].click();
            }
        }
    });
    function addActive(x) {
        /*a function to classify an item as "active":*/
        if (!x) return false;
        /*start by removing the "active" class on all items:*/
        removeActive(x);
        if (currentFocus >= x.length) currentFocus = 0;
        if (currentFocus < 0) currentFocus = (x.length - 1);
        /*add class "autocomplete-active":*/
        x[currentFocus].classList.add("autocomplete-active");
    }
    function removeActive(x) {
        /*a function to remove the "active" class from all autocomplete items:*/
        for (var i = 0; i < x.length; i++) {
            x[i].classList.remove("autocomplete-active");
        }
    }
    function closeAllLists(elmnt) {
        /*close all autocomplete lists in the document,
        except the one passed as an argument:*/
        var x = document.getElementsByClassName("autocomplete-items");
        for (var i = 0; i < x.length; i++) {
            if (elmnt != x[i] && elmnt != inp) {
                x[i].parentNode.removeChild(x[i]);
            }
        }
    }
    /*execute a function when someone clicks in the document:*/
    document.addEventListener("click", function (e) {
        closeAllLists(e.target);
    });
}

</script>


<style>
    * { box-sizing: border-box; }
body {
  font: 16px Arial; 
}
.autocomplete {
  /*the container must be positioned relative:*/
  position: relative;
  display: inline-block;
}
input {
  border: 1px solid transparent;
  background-color: #f1f1f1;
  padding: 10px;
  font-size: 16px;
}
input[type=text] {
  background-color: #f1f1f1;
  width: 100%;
}
input[type=submit] {
  background-color: DodgerBlue;
  color: #fff;
}
.autocomplete-items {
  position: absolute;
  border: 1px solid #d4d4d4;
  border-bottom: none;
  border-top: none;
  z-index: 99;
  border-radius:5px;
  /*position the autocomplete items to be the same width as the container:*/
  top: 100%;
  left: 0;
  right: 0;
  border-bottom: 1px solid #d4d4d4; 
}
.autocomplete-items div {
  padding: 10px;
  cursor: pointer;
  background-color: #fff;
  border-radius:5px; 
}
.autocomplete-items div:hover {
  /*when hovering an item:*/
  background-color: #e9e9e9; 
}
.autocomplete-active {
  /*when navigating through the items using the arrow keys:*/
  background-color: DodgerBlue !important; 
  color: #ffffff; 
}
</style>